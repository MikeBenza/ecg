digraph lists {
  "lists:all/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:all/2" -> "lists:all/2";
  "lists:any/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:any/2" -> "lists:any/2";
  "lists:append/1" -> "lists:append/1";
  "lists:concat/1" -> "lists:flatmap/2";
  "lists:concat/1" -> "lists:thing_to_list/1";
  "lists:delete/2" -> "lists:delete/2";
  "lists:do_flatten/2" -> "lists:do_flatten/2";
  "lists:droplast/1" -> "lists:droplast/1";
  "lists:dropwhile/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:dropwhile/2" -> "lists:dropwhile/2";
  "lists:duplicate/2" -> "lists:duplicate/3";
  "lists:duplicate/3" -> "lists:duplicate/3";
  "lists:filter/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:filtermap/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:filtermap/2" -> "lists:filtermap/2";
  "lists:flatlength/1" -> "lists:flatlength/2";
  "lists:flatlength/2" -> "lists:flatlength/2";
  "lists:flatmap/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:flatmap/2" -> "lists:flatmap/2";
  "lists:flatten/1" -> "lists:do_flatten/2";
  "lists:flatten/2" -> "lists:do_flatten/2";
  "lists:fmerge2_1/5" -> "$M_EXPR:$F_EXPR/2";
  "lists:fmerge2_1/5" -> "lists:fmerge2_1/5";
  "lists:fmerge2_1/5" -> "lists:fmerge2_2/5";
  "lists:fmerge2_2/5" -> "$M_EXPR:$F_EXPR/2";
  "lists:fmerge2_2/5" -> "lists:fmerge2_1/5";
  "lists:fmerge2_2/5" -> "lists:fmerge2_2/5";
  "lists:fmergel/4" -> "lists:fmerge2_1/5";
  "lists:fmergel/4" -> "lists:fmergel/4";
  "lists:fmergel/4" -> "lists:rfmergel/4";
  "lists:foldl/3" -> "$M_EXPR:$F_EXPR/2";
  "lists:foldl/3" -> "lists:foldl/3";
  "lists:foldr/3" -> "$M_EXPR:$F_EXPR/2";
  "lists:foldr/3" -> "lists:foldr/3";
  "lists:foreach/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:foreach/2" -> "lists:foreach/2";
  "lists:fsplit_1/6" -> "$M_EXPR:$F_EXPR/2";
  "lists:fsplit_1/6" -> "lists:fsplit_1/6";
  "lists:fsplit_1/6" -> "lists:fsplit_1_1/7";
  "lists:fsplit_1/6" -> "lists:rfmergel/4";
  "lists:fsplit_1_1/7" -> "$M_EXPR:$F_EXPR/2";
  "lists:fsplit_1_1/7" -> "lists:fsplit_1/6";
  "lists:fsplit_1_1/7" -> "lists:fsplit_1_1/7";
  "lists:fsplit_1_1/7" -> "lists:rfmergel/4";
  "lists:fsplit_2/6" -> "$M_EXPR:$F_EXPR/2";
  "lists:fsplit_2/6" -> "lists:fmergel/4";
  "lists:fsplit_2/6" -> "lists:fsplit_2/6";
  "lists:fsplit_2/6" -> "lists:fsplit_2_1/7";
  "lists:fsplit_2_1/7" -> "$M_EXPR:$F_EXPR/2";
  "lists:fsplit_2_1/7" -> "lists:fmergel/4";
  "lists:fsplit_2_1/7" -> "lists:fsplit_2/6";
  "lists:fsplit_2_1/7" -> "lists:fsplit_2_1/7";
  "lists:join/2" -> "lists:join_prepend/2";
  "lists:join_prepend/2" -> "lists:join_prepend/2";
  "lists:keydelete/3" -> "lists:keydelete3/3";
  "lists:keydelete3/3" -> "lists:keydelete3/3";
  "lists:keymap/3" -> "$M_EXPR:$F_EXPR/1";
  "lists:keymap/3" -> "lists:keymap/3";
  "lists:keymerge/3" -> "lists:keymerge2_1/6";
  "lists:keymerge2_1/6" -> "lists:keymerge2_1/6";
  "lists:keymerge2_1/6" -> "lists:keymerge2_2/7";
  "lists:keymerge2_2/7" -> "lists:keymerge2_1/6";
  "lists:keymerge2_2/7" -> "lists:keymerge2_2/7";
  "lists:keymerge3_1/10" -> "lists:keymerge2_1/6";
  "lists:keymerge3_1/10" -> "lists:keymerge2_2/7";
  "lists:keymerge3_1/10" -> "lists:keymerge3_12/12";
  "lists:keymerge3_1/10" -> "lists:keymerge3_21/12";
  "lists:keymerge3_12/12" -> "lists:keymerge3_1/10";
  "lists:keymerge3_12/12" -> "lists:keymerge3_12_3/9";
  "lists:keymerge3_12_3/9" -> "lists:keymerge2_1/6";
  "lists:keymerge3_12_3/9" -> "lists:keymerge3_1/10";
  "lists:keymerge3_12_3/9" -> "lists:keymerge3_12_3/9";
  "lists:keymerge3_2/10" -> "lists:keymerge2_1/6";
  "lists:keymerge3_2/10" -> "lists:keymerge2_2/7";
  "lists:keymerge3_2/10" -> "lists:keymerge3_12/12";
  "lists:keymerge3_2/10" -> "lists:keymerge3_21/12";
  "lists:keymerge3_21/12" -> "lists:keymerge3_2/10";
  "lists:keymerge3_21/12" -> "lists:keymerge3_21_3/9";
  "lists:keymerge3_21_3/9" -> "lists:keymerge2_2/7";
  "lists:keymerge3_21_3/9" -> "lists:keymerge3_2/10";
  "lists:keymerge3_21_3/9" -> "lists:keymerge3_21_3/9";
  "lists:keymergel/4" -> "lists:keymerge2_1/6";
  "lists:keymergel/4" -> "lists:keymerge3_1/10";
  "lists:keymergel/4" -> "lists:keymergel/4";
  "lists:keymergel/4" -> "lists:rkeymergel/4";
  "lists:keyreplace/4" -> "lists:keyreplace3/4";
  "lists:keyreplace3/4" -> "lists:keyreplace3/4";
  "lists:keysort/2" -> "lists:keysort_1/5";
  "lists:keysort/2" -> "lists:keysplit_1/8";
  "lists:keysort/2" -> "lists:keysplit_2/8";
  "lists:keysort_1/5" -> "lists:keysort_1/5";
  "lists:keysort_1/5" -> "lists:keysplit_1/8";
  "lists:keysort_1/5" -> "lists:keysplit_2/8";
  "lists:keysplit_1/8" -> "lists:keysplit_1/8";
  "lists:keysplit_1/8" -> "lists:keysplit_1_1/10";
  "lists:keysplit_1/8" -> "lists:rkeymergel/4";
  "lists:keysplit_1_1/10" -> "lists:keysplit_1/8";
  "lists:keysplit_1_1/10" -> "lists:keysplit_1_1/10";
  "lists:keysplit_1_1/10" -> "lists:rkeymergel/4";
  "lists:keysplit_2/8" -> "lists:keymergel/4";
  "lists:keysplit_2/8" -> "lists:keysplit_2/8";
  "lists:keysplit_2/8" -> "lists:keysplit_2_1/10";
  "lists:keysplit_2_1/10" -> "lists:keymergel/4";
  "lists:keysplit_2_1/10" -> "lists:keysplit_2/8";
  "lists:keysplit_2_1/10" -> "lists:keysplit_2_1/10";
  "lists:keystore/4" -> "lists:keystore2/4";
  "lists:keystore2/4" -> "lists:keystore2/4";
  "lists:keytake/3" -> "lists:keytake/4";
  "lists:keytake/4" -> "lists:keytake/4";
  "lists:last/1" -> "lists:last/2";
  "lists:last/2" -> "lists:last/2";
  "lists:map/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:map/2" -> "lists:map/2";
  "lists:mapfoldl/3" -> "$M_EXPR:$F_EXPR/2";
  "lists:mapfoldl/3" -> "lists:mapfoldl/3";
  "lists:mapfoldr/3" -> "$M_EXPR:$F_EXPR/2";
  "lists:mapfoldr/3" -> "lists:mapfoldr/3";
  "lists:max/1" -> "lists:max/2";
  "lists:max/2" -> "lists:max/2";
  "lists:merge/1" -> "lists:mergel/2";
  "lists:merge/2" -> "lists:merge2_1/4";
  "lists:merge/3" -> "lists:fmerge2_1/5";
  "lists:merge2_1/4" -> "lists:merge2_1/4";
  "lists:merge2_1/4" -> "lists:merge2_2/5";
  "lists:merge2_2/5" -> "lists:merge2_1/4";
  "lists:merge2_2/5" -> "lists:merge2_2/5";
  "lists:merge3/3" -> "lists:merge/2";
  "lists:merge3/3" -> "lists:merge3_1/6";
  "lists:merge3_1/6" -> "lists:merge2_1/4";
  "lists:merge3_1/6" -> "lists:merge2_2/5";
  "lists:merge3_1/6" -> "lists:merge3_12/7";
  "lists:merge3_1/6" -> "lists:merge3_21/7";
  "lists:merge3_12/7" -> "lists:merge3_1/6";
  "lists:merge3_12/7" -> "lists:merge3_12_3/6";
  "lists:merge3_12_3/6" -> "lists:merge2_1/4";
  "lists:merge3_12_3/6" -> "lists:merge3_1/6";
  "lists:merge3_12_3/6" -> "lists:merge3_12_3/6";
  "lists:merge3_2/6" -> "lists:merge2_1/4";
  "lists:merge3_2/6" -> "lists:merge2_2/5";
  "lists:merge3_2/6" -> "lists:merge3_12/7";
  "lists:merge3_2/6" -> "lists:merge3_21/7";
  "lists:merge3_21/7" -> "lists:merge3_2/6";
  "lists:merge3_21/7" -> "lists:merge3_21_3/6";
  "lists:merge3_21_3/6" -> "lists:merge2_2/5";
  "lists:merge3_21_3/6" -> "lists:merge3_2/6";
  "lists:merge3_21_3/6" -> "lists:merge3_21_3/6";
  "lists:mergel/2" -> "lists:merge2_1/4";
  "lists:mergel/2" -> "lists:merge3_1/6";
  "lists:mergel/2" -> "lists:mergel/2";
  "lists:mergel/2" -> "lists:rmergel/2";
  "lists:min/1" -> "lists:min/2";
  "lists:min/2" -> "lists:min/2";
  "lists:nth/2" -> "lists:nth/2";
  "lists:nthtail/2" -> "lists:nthtail/2";
  "lists:partition/2" -> "lists:partition/4";
  "lists:partition/4" -> "$M_EXPR:$F_EXPR/1";
  "lists:partition/4" -> "lists:partition/4";
  "lists:partition/4" -> "lists:reverse/1";
  "lists:prefix/2" -> "lists:prefix/2";
  "lists:rfmerge2_1/5" -> "$M_EXPR:$F_EXPR/2";
  "lists:rfmerge2_1/5" -> "lists:rfmerge2_1/5";
  "lists:rfmerge2_1/5" -> "lists:rfmerge2_2/5";
  "lists:rfmerge2_2/5" -> "$M_EXPR:$F_EXPR/2";
  "lists:rfmerge2_2/5" -> "lists:rfmerge2_1/5";
  "lists:rfmerge2_2/5" -> "lists:rfmerge2_2/5";
  "lists:rfmergel/4" -> "lists:fmergel/4";
  "lists:rfmergel/4" -> "lists:rfmerge2_1/5";
  "lists:rfmergel/4" -> "lists:rfmergel/4";
  "lists:rkeymerge/3" -> "lists:rkeymerge2_1/6";
  "lists:rkeymerge2_1/6" -> "lists:rkeymerge2_1/6";
  "lists:rkeymerge2_1/6" -> "lists:rkeymerge2_2/7";
  "lists:rkeymerge2_2/7" -> "lists:rkeymerge2_1/6";
  "lists:rkeymerge2_2/7" -> "lists:rkeymerge2_2/7";
  "lists:rkeymerge3_1/10" -> "lists:rkeymerge2_1/6";
  "lists:rkeymerge3_1/10" -> "lists:rkeymerge2_2/7";
  "lists:rkeymerge3_1/10" -> "lists:rkeymerge3_12/12";
  "lists:rkeymerge3_1/10" -> "lists:rkeymerge3_21/12";
  "lists:rkeymerge3_12/12" -> "lists:rkeymerge3_12_3/9";
  "lists:rkeymerge3_12/12" -> "lists:rkeymerge3_2/10";
  "lists:rkeymerge3_12_3/9" -> "lists:rkeymerge2_2/7";
  "lists:rkeymerge3_12_3/9" -> "lists:rkeymerge3_12_3/9";
  "lists:rkeymerge3_12_3/9" -> "lists:rkeymerge3_2/10";
  "lists:rkeymerge3_2/10" -> "lists:rkeymerge2_1/6";
  "lists:rkeymerge3_2/10" -> "lists:rkeymerge2_2/7";
  "lists:rkeymerge3_2/10" -> "lists:rkeymerge3_12/12";
  "lists:rkeymerge3_2/10" -> "lists:rkeymerge3_21/12";
  "lists:rkeymerge3_21/12" -> "lists:rkeymerge3_1/10";
  "lists:rkeymerge3_21/12" -> "lists:rkeymerge3_21_3/9";
  "lists:rkeymerge3_21_3/9" -> "lists:rkeymerge2_1/6";
  "lists:rkeymerge3_21_3/9" -> "lists:rkeymerge3_1/10";
  "lists:rkeymerge3_21_3/9" -> "lists:rkeymerge3_21_3/9";
  "lists:rkeymergel/4" -> "lists:keymergel/4";
  "lists:rkeymergel/4" -> "lists:rkeymerge2_1/6";
  "lists:rkeymergel/4" -> "lists:rkeymerge3_1/10";
  "lists:rkeymergel/4" -> "lists:rkeymergel/4";
  "lists:rmerge/2" -> "lists:rmerge2_1/4";
  "lists:rmerge/3" -> "lists:rfmerge2_1/5";
  "lists:rmerge2_1/4" -> "lists:rmerge2_1/4";
  "lists:rmerge2_1/4" -> "lists:rmerge2_2/5";
  "lists:rmerge2_2/5" -> "lists:rmerge2_1/4";
  "lists:rmerge2_2/5" -> "lists:rmerge2_2/5";
  "lists:rmerge3/3" -> "lists:rmerge/2";
  "lists:rmerge3/3" -> "lists:rmerge3_1/6";
  "lists:rmerge3_1/6" -> "lists:rmerge2_1/4";
  "lists:rmerge3_1/6" -> "lists:rmerge2_2/5";
  "lists:rmerge3_1/6" -> "lists:rmerge3_12/7";
  "lists:rmerge3_1/6" -> "lists:rmerge3_21/7";
  "lists:rmerge3_12/7" -> "lists:rmerge3_12_3/6";
  "lists:rmerge3_12/7" -> "lists:rmerge3_2/6";
  "lists:rmerge3_12_3/6" -> "lists:rmerge2_2/5";
  "lists:rmerge3_12_3/6" -> "lists:rmerge3_12_3/6";
  "lists:rmerge3_12_3/6" -> "lists:rmerge3_2/6";
  "lists:rmerge3_2/6" -> "lists:rmerge2_1/4";
  "lists:rmerge3_2/6" -> "lists:rmerge2_2/5";
  "lists:rmerge3_2/6" -> "lists:rmerge3_12/7";
  "lists:rmerge3_2/6" -> "lists:rmerge3_21/7";
  "lists:rmerge3_21/7" -> "lists:rmerge3_1/6";
  "lists:rmerge3_21/7" -> "lists:rmerge3_21_3/6";
  "lists:rmerge3_21_3/6" -> "lists:rmerge2_1/4";
  "lists:rmerge3_21_3/6" -> "lists:rmerge3_1/6";
  "lists:rmerge3_21_3/6" -> "lists:rmerge3_21_3/6";
  "lists:rmergel/2" -> "lists:mergel/2";
  "lists:rmergel/2" -> "lists:rmerge2_1/4";
  "lists:rmergel/2" -> "lists:rmerge3_1/6";
  "lists:rmergel/2" -> "lists:rmergel/2";
  "lists:rufmerge2_1/5" -> "$M_EXPR:$F_EXPR/2";
  "lists:rufmerge2_1/5" -> "lists:rufmerge2_1/5";
  "lists:rufmerge2_1/5" -> "lists:rufmerge2_2/6";
  "lists:rufmerge2_2/6" -> "$M_EXPR:$F_EXPR/2";
  "lists:rufmerge2_2/6" -> "lists:rufmerge2_1/5";
  "lists:rufmerge2_2/6" -> "lists:rufmerge2_2/6";
  "lists:rufmergel/3" -> "lists:rufmerge2_1/5";
  "lists:rufmergel/3" -> "lists:rufmergel/3";
  "lists:rufmergel/3" -> "lists:ufmergel/3";
  "lists:rukeymerge/3" -> "lists:rukeymerge2_1/6";
  "lists:rukeymerge2_1/6" -> "lists:rukeymerge2_1/6";
  "lists:rukeymerge2_1/6" -> "lists:rukeymerge2_2/8";
  "lists:rukeymerge2_2/8" -> "lists:rukeymerge2_1/6";
  "lists:rukeymerge2_2/8" -> "lists:rukeymerge2_2/8";
  "lists:rukeymerge3_1/11" -> "lists:rukeymerge2_1/6";
  "lists:rukeymerge3_1/11" -> "lists:rukeymerge2_2/8";
  "lists:rukeymerge3_1/11" -> "lists:rukeymerge3_12a/11";
  "lists:rukeymerge3_1/11" -> "lists:rukeymerge3_21a/13";
  "lists:rukeymerge3_12_3/11" -> "lists:rukeymerge2_2/8";
  "lists:rukeymerge3_12_3/11" -> "lists:rukeymerge3_12_3/11";
  "lists:rukeymerge3_12_3/11" -> "lists:rukeymerge3_2/11";
  "lists:rukeymerge3_12a/11" -> "lists:rukeymerge3_12_3/11";
  "lists:rukeymerge3_12a/11" -> "lists:rukeymerge3_2/11";
  "lists:rukeymerge3_12b/12" -> "lists:rukeymerge3_12_3/11";
  "lists:rukeymerge3_12b/12" -> "lists:rukeymerge3_2/11";
  "lists:rukeymerge3_2/11" -> "lists:rukeymerge2_1/6";
  "lists:rukeymerge3_2/11" -> "lists:rukeymerge2_2/8";
  "lists:rukeymerge3_2/11" -> "lists:rukeymerge3_1/11";
  "lists:rukeymerge3_2/11" -> "lists:rukeymerge3_12b/12";
  "lists:rukeymerge3_2/11" -> "lists:rukeymerge3_21b/12";
  "lists:rukeymerge3_21_3/11" -> "lists:rukeymerge2_1/6";
  "lists:rukeymerge3_21_3/11" -> "lists:rukeymerge3_1/11";
  "lists:rukeymerge3_21_3/11" -> "lists:rukeymerge3_21_3/11";
  "lists:rukeymerge3_21a/13" -> "lists:rukeymerge3_1/11";
  "lists:rukeymerge3_21a/13" -> "lists:rukeymerge3_21_3/11";
  "lists:rukeymerge3_21b/12" -> "lists:rukeymerge3_1/11";
  "lists:rukeymerge3_21b/12" -> "lists:rukeymerge3_21_3/11";
  "lists:rukeymergel/3" -> "lists:rukeymerge2_1/6";
  "lists:rukeymergel/3" -> "lists:rukeymerge3_1/11";
  "lists:rukeymergel/3" -> "lists:rukeymergel/3";
  "lists:rukeymergel/3" -> "lists:ukeymergel/3";
  "lists:rumerge/2" -> "lists:rumerge2_1/4";
  "lists:rumerge/3" -> "lists:rufmerge2_1/5";
  "lists:rumerge2_1/4" -> "lists:rumerge2_1/4";
  "lists:rumerge2_1/4" -> "lists:rumerge2_2/5";
  "lists:rumerge2_2/5" -> "lists:rumerge2_1/4";
  "lists:rumerge2_2/5" -> "lists:rumerge2_2/5";
  "lists:rumerge3/3" -> "lists:rumerge/2";
  "lists:rumerge3/3" -> "lists:rumerge3_1/6";
  "lists:rumerge3_1/6" -> "lists:rumerge2_1/4";
  "lists:rumerge3_1/6" -> "lists:rumerge2_2/5";
  "lists:rumerge3_1/6" -> "lists:rumerge3_1/6";
  "lists:rumerge3_1/6" -> "lists:rumerge3_12a/7";
  "lists:rumerge3_1/6" -> "lists:rumerge3_21_3/7";
  "lists:rumerge3_12_3/7" -> "lists:rumerge2_2/5";
  "lists:rumerge3_12_3/7" -> "lists:rumerge3_12_3/7";
  "lists:rumerge3_12_3/7" -> "lists:rumerge3_2/7";
  "lists:rumerge3_12a/7" -> "lists:rumerge3_12_3/7";
  "lists:rumerge3_12a/7" -> "lists:rumerge3_2/7";
  "lists:rumerge3_12b/8" -> "lists:rumerge3_12_3/7";
  "lists:rumerge3_12b/8" -> "lists:rumerge3_2/7";
  "lists:rumerge3_2/7" -> "lists:rumerge2_1/4";
  "lists:rumerge3_2/7" -> "lists:rumerge2_2/5";
  "lists:rumerge3_2/7" -> "lists:rumerge3_1/6";
  "lists:rumerge3_2/7" -> "lists:rumerge3_12b/8";
  "lists:rumerge3_2/7" -> "lists:rumerge3_21_3/7";
  "lists:rumerge3_21_3/7" -> "lists:rumerge2_1/4";
  "lists:rumerge3_21_3/7" -> "lists:rumerge3_1/6";
  "lists:rumerge3_21_3/7" -> "lists:rumerge3_21_3/7";
  "lists:rumergel/3" -> "lists:rumerge2_1/4";
  "lists:rumergel/3" -> "lists:rumerge3_1/6";
  "lists:rumergel/3" -> "lists:rumergel/3";
  "lists:rumergel/3" -> "lists:umergel/3";
  "lists:seq/2" -> "lists:seq_loop/3";
  "lists:seq/3" -> "lists:seq_loop/4";
  "lists:seq_loop/3" -> "lists:seq_loop/3";
  "lists:seq_loop/4" -> "lists:seq_loop/4";
  "lists:sort/1" -> "lists:sort_1/3";
  "lists:sort/1" -> "lists:split_1/5";
  "lists:sort/1" -> "lists:split_2/5";
  "lists:sort/2" -> "$M_EXPR:$F_EXPR/2";
  "lists:sort/2" -> "lists:fsplit_1/6";
  "lists:sort/2" -> "lists:fsplit_2/6";
  "lists:sort_1/3" -> "lists:sort_1/3";
  "lists:sort_1/3" -> "lists:split_1/5";
  "lists:sort_1/3" -> "lists:split_2/5";
  "lists:split/2" -> "lists:split/3";
  "lists:split/3" -> "lists:split/3";
  "lists:split_1/5" -> "lists:rmergel/2";
  "lists:split_1/5" -> "lists:split_1/5";
  "lists:split_1/5" -> "lists:split_1_1/6";
  "lists:split_1_1/6" -> "lists:rmergel/2";
  "lists:split_1_1/6" -> "lists:split_1/5";
  "lists:split_1_1/6" -> "lists:split_1_1/6";
  "lists:split_2/5" -> "lists:mergel/2";
  "lists:split_2/5" -> "lists:split_2/5";
  "lists:split_2/5" -> "lists:split_2_1/6";
  "lists:split_2_1/6" -> "lists:mergel/2";
  "lists:split_2_1/6" -> "lists:split_2/5";
  "lists:split_2_1/6" -> "lists:split_2_1/6";
  "lists:splitwith/2" -> "lists:splitwith/3";
  "lists:splitwith/3" -> "$M_EXPR:$F_EXPR/1";
  "lists:splitwith/3" -> "lists:reverse/1";
  "lists:splitwith/3" -> "lists:splitwith/3";
  "lists:sublist/2" -> "lists:sublist_2/2";
  "lists:sublist/3" -> "lists:nthtail/2";
  "lists:sublist/3" -> "lists:sublist/2";
  "lists:sublist_2/2" -> "lists:sublist_2/2";
  "lists:suffix/2" -> "lists:nthtail/2";
  "lists:sum/1" -> "lists:sum/2";
  "lists:sum/2" -> "lists:sum/2";
  "lists:takewhile/2" -> "$M_EXPR:$F_EXPR/1";
  "lists:takewhile/2" -> "lists:takewhile/2";
  "lists:ufmerge2_1/6" -> "$M_EXPR:$F_EXPR/2";
  "lists:ufmerge2_1/6" -> "lists:ufmerge2_1/6";
  "lists:ufmerge2_1/6" -> "lists:ufmerge2_2/5";
  "lists:ufmerge2_2/5" -> "$M_EXPR:$F_EXPR/2";
  "lists:ufmerge2_2/5" -> "lists:ufmerge2_1/6";
  "lists:ufmerge2_2/5" -> "lists:ufmerge2_2/5";
  "lists:ufmergel/3" -> "lists:rufmergel/3";
  "lists:ufmergel/3" -> "lists:ufmerge2_2/5";
  "lists:ufmergel/3" -> "lists:ufmergel/3";
  "lists:ufsplit_1/6" -> "$M_EXPR:$F_EXPR/2";
  "lists:ufsplit_1/6" -> "lists:rufmergel/3";
  "lists:ufsplit_1/6" -> "lists:ufsplit_1/6";
  "lists:ufsplit_1/6" -> "lists:ufsplit_1_1/7";
  "lists:ufsplit_1_1/7" -> "$M_EXPR:$F_EXPR/2";
  "lists:ufsplit_1_1/7" -> "lists:rufmergel/3";
  "lists:ufsplit_1_1/7" -> "lists:ufsplit_1/6";
  "lists:ufsplit_1_1/7" -> "lists:ufsplit_1_1/7";
  "lists:ufsplit_2/4" -> "$M_EXPR:$F_EXPR/2";
  "lists:ufsplit_2/4" -> "lists:ufsplit_1/6";
  "lists:ufsplit_2/4" -> "lists:ufsplit_2/4";
  "lists:ukeymerge/3" -> "lists:ukeymerge2_2/6";
  "lists:ukeymerge2_1/7" -> "lists:ukeymerge2_1/7";
  "lists:ukeymerge2_1/7" -> "lists:ukeymerge2_2/6";
  "lists:ukeymerge2_2/6" -> "lists:ukeymerge2_1/7";
  "lists:ukeymerge2_2/6" -> "lists:ukeymerge2_2/6";
  "lists:ukeymerge3_1/11" -> "lists:ukeymerge2_1/7";
  "lists:ukeymerge3_1/11" -> "lists:ukeymerge2_2/6";
  "lists:ukeymerge3_1/11" -> "lists:ukeymerge3_12/13";
  "lists:ukeymerge3_1/11" -> "lists:ukeymerge3_2/11";
  "lists:ukeymerge3_1/11" -> "lists:ukeymerge3_21/13";
  "lists:ukeymerge3_12/13" -> "lists:ukeymerge3_1/11";
  "lists:ukeymerge3_12/13" -> "lists:ukeymerge3_12_3/9";
  "lists:ukeymerge3_12_3/9" -> "lists:ukeymerge2_1/7";
  "lists:ukeymerge3_12_3/9" -> "lists:ukeymerge3_1/11";
  "lists:ukeymerge3_12_3/9" -> "lists:ukeymerge3_12_3/9";
  "lists:ukeymerge3_2/11" -> "lists:ukeymerge2_1/7";
  "lists:ukeymerge3_2/11" -> "lists:ukeymerge2_2/6";
  "lists:ukeymerge3_2/11" -> "lists:ukeymerge3_12/13";
  "lists:ukeymerge3_2/11" -> "lists:ukeymerge3_21/13";
  "lists:ukeymerge3_21/13" -> "lists:ukeymerge3_2/11";
  "lists:ukeymerge3_21/13" -> "lists:ukeymerge3_21_3/9";
  "lists:ukeymerge3_21_3/9" -> "lists:ukeymerge2_2/6";
  "lists:ukeymerge3_21_3/9" -> "lists:ukeymerge3_2/11";
  "lists:ukeymerge3_21_3/9" -> "lists:ukeymerge3_21_3/9";
  "lists:ukeymergel/3" -> "lists:rukeymergel/3";
  "lists:ukeymergel/3" -> "lists:ukeymerge2_2/6";
  "lists:ukeymergel/3" -> "lists:ukeymerge3_1/11";
  "lists:ukeymergel/3" -> "lists:ukeymergel/3";
  "lists:ukeysort/2" -> "lists:ukeysort_1/4";
  "lists:ukeysort/2" -> "lists:ukeysplit_1/8";
  "lists:ukeysort/2" -> "lists:ukeysplit_2/5";
  "lists:ukeysort_1/4" -> "lists:ukeysort_1/4";
  "lists:ukeysort_1/4" -> "lists:ukeysplit_1/8";
  "lists:ukeysort_1/4" -> "lists:ukeysplit_2/5";
  "lists:ukeysplit_1/8" -> "lists:rukeymergel/3";
  "lists:ukeysplit_1/8" -> "lists:ukeysplit_1/8";
  "lists:ukeysplit_1/8" -> "lists:ukeysplit_1_1/10";
  "lists:ukeysplit_1_1/10" -> "lists:rukeymergel/3";
  "lists:ukeysplit_1_1/10" -> "lists:ukeysplit_1/8";
  "lists:ukeysplit_1_1/10" -> "lists:ukeysplit_1_1/10";
  "lists:ukeysplit_2/5" -> "lists:ukeysplit_1/8";
  "lists:ukeysplit_2/5" -> "lists:ukeysplit_2/5";
  "lists:umerge/1" -> "lists:umergel/1";
  "lists:umerge/2" -> "lists:umerge2_2/4";
  "lists:umerge/3" -> "lists:ufmerge2_2/5";
  "lists:umerge2_1/5" -> "lists:umerge2_1/5";
  "lists:umerge2_1/5" -> "lists:umerge2_2/4";
  "lists:umerge2_2/4" -> "lists:umerge2_1/5";
  "lists:umerge2_2/4" -> "lists:umerge2_2/4";
  "lists:umerge3/3" -> "lists:umerge/2";
  "lists:umerge3/3" -> "lists:umerge3_1/7";
  "lists:umerge3_1/7" -> "lists:umerge2_1/5";
  "lists:umerge3_1/7" -> "lists:umerge2_2/4";
  "lists:umerge3_1/7" -> "lists:umerge3_12/8";
  "lists:umerge3_1/7" -> "lists:umerge3_2/7";
  "lists:umerge3_1/7" -> "lists:umerge3_21/8";
  "lists:umerge3_12/8" -> "lists:umerge3_1/7";
  "lists:umerge3_12/8" -> "lists:umerge3_12_3/6";
  "lists:umerge3_12_3/6" -> "lists:umerge2_1/5";
  "lists:umerge3_12_3/6" -> "lists:umerge3_1/7";
  "lists:umerge3_12_3/6" -> "lists:umerge3_12_3/6";
  "lists:umerge3_2/7" -> "lists:umerge2_1/5";
  "lists:umerge3_2/7" -> "lists:umerge2_2/4";
  "lists:umerge3_2/7" -> "lists:umerge3_12/8";
  "lists:umerge3_2/7" -> "lists:umerge3_21/8";
  "lists:umerge3_21/8" -> "lists:umerge3_2/7";
  "lists:umerge3_21/8" -> "lists:umerge3_21_3/6";
  "lists:umerge3_21_3/6" -> "lists:umerge2_2/4";
  "lists:umerge3_21_3/6" -> "lists:umerge3_2/7";
  "lists:umerge3_21_3/6" -> "lists:umerge3_21_3/6";
  "lists:umergel/1" -> "lists:umergel/3";
  "lists:umergel/3" -> "lists:rumergel/3";
  "lists:umergel/3" -> "lists:umerge2_2/4";
  "lists:umergel/3" -> "lists:umerge3_1/7";
  "lists:umergel/3" -> "lists:umergel/3";
  "lists:unzip/1" -> "lists:unzip/3";
  "lists:unzip/3" -> "lists:reverse/1";
  "lists:unzip/3" -> "lists:unzip/3";
  "lists:unzip3/1" -> "lists:unzip3/4";
  "lists:unzip3/4" -> "lists:reverse/1";
  "lists:unzip3/4" -> "lists:unzip3/4";
  "lists:usort/1" -> "lists:usort_1/2";
  "lists:usort/1" -> "lists:usplit_1/5";
  "lists:usort/1" -> "lists:usplit_2/5";
  "lists:usort/2" -> "lists:usort_1/3";
  "lists:usort_1/2" -> "lists:usort_1/2";
  "lists:usort_1/2" -> "lists:usplit_1/5";
  "lists:usort_1/2" -> "lists:usplit_2/5";
  "lists:usort_1/3" -> "$M_EXPR:$F_EXPR/2";
  "lists:usort_1/3" -> "lists:ufsplit_1/6";
  "lists:usort_1/3" -> "lists:ufsplit_2/4";
  "lists:usort_1/3" -> "lists:usort_1/3";
  "lists:usplit_1/5" -> "lists:rumergel/3";
  "lists:usplit_1/5" -> "lists:usplit_1/5";
  "lists:usplit_1/5" -> "lists:usplit_1_1/6";
  "lists:usplit_1_1/6" -> "lists:rumergel/3";
  "lists:usplit_1_1/6" -> "lists:usplit_1/5";
  "lists:usplit_1_1/6" -> "lists:usplit_1_1/6";
  "lists:usplit_2/5" -> "lists:umergel/3";
  "lists:usplit_2/5" -> "lists:usplit_2/5";
  "lists:usplit_2/5" -> "lists:usplit_2_1/6";
  "lists:usplit_2_1/6" -> "lists:umergel/3";
  "lists:usplit_2_1/6" -> "lists:usplit_2/5";
  "lists:usplit_2_1/6" -> "lists:usplit_2_1/6";
  "lists:zf/2" -> "lists:filtermap/2";
  "lists:zip/2" -> "lists:zip/2";
  "lists:zip3/3" -> "lists:zip3/3";
  "lists:zipwith/3" -> "$M_EXPR:$F_EXPR/2";
  "lists:zipwith/3" -> "lists:zipwith/3";
  "lists:zipwith3/4" -> "$M_EXPR:$F_EXPR/3";
  "lists:zipwith3/4" -> "lists:zipwith3/4";
}

